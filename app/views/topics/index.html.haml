- @title = "Forum"

- @theme = "default-dark"

%div{ data: { object: "menu-trigger" } }
  .float-right
    %span#forum-top-container= link_to "Start new topic", async_forum_new_topic_path, method: :post, remote: true, class: "btn btn-accent btn-shadow"
    = render "layouts/per_page", per_page: 40, object_count: @topics.total_count
  = render "layouts/white_title", title: @title

#new-topic-container{ style: "display:none;" }

.topics
  %table.table.table-striped.table-borderless.table-sticky
    %col
    %col
    %col.d-none.d-sm-table-column{ width: "50px" }
    %col.d-none.d-md-table-column{ width: "50px" }
    %col.d-none.d-md-table-column{ width: "150px" }
    %thead
      %tr.table-light.tr-align-middle
        %th.p-0.topic-line-mark
        %th.py-2.pl-1.pr-2
          = form_tag search_path, method: :get, id: "search-form" do
            = text_field_tag :search, params[:search], placeholder: "Search the forum", autocomplete: "off", class: "table-cell-search-input border rounded"
        %th.d-none.d-sm-table-cell.text-center
          = order_to "Replies", primary: "replies desc", secondary: "replies"
        %th.d-none.d-md-table-cell.text-center
          = order_to "Views", primary: "views desc", secondary: "views"
        %th.d-none.d-md-table-cell.text-center
          = order_to "Last Post", primary: "oldest", secondary: "latest"
    %tbody
      - topic_users = TopicUser.where(topic: @topics, user: current_user).to_a
      - @topics.each do |topic|
        - topic_user = topic_users.find { |tu| tu.topic_id == topic.id }
        - unread_replies = topic.unread_replies(topic_user)
        - next_unread_reply = topic.next_unread_reply(topic_user)
        - started_reading = topic.started_reading?(topic_user)
        %tr
          %td.p-0.topic-line-mark{ class: "#{"topic-line-unread" if current_user && (!started_reading || unread_replies > 0) }"  }
          %td.breakword
            .float-right
              - if next_unread_reply
                %small
                  = link_to next_unread_reply, data: { turbolinks: false }, class: "btn btn-sm btn-accent" do
                    = unread_replies
                    new
                    = icon("far", "comments")
              - elsif topic.last_page(current_user) > 1
                %span.d-none.d-sm-inline
                  = link_to "1", topic, class: "btn btn-sm btn-light"
                  \...
                  = link_to topic.last_page(current_user), page_topic_path(topic, page: topic.last_page(current_user)), class: "btn btn-sm btn-light"
            - if current_user && current_user.admin? && topic.user.shadow_banned?
              = icon("fas", "eye-slash", class: "text-muted")
            - if topic.pinned?
              = icon("fas", "thumbtack", class: "text-muted")
            - if next_unread_reply
              = link_to topic.title, next_unread_reply, data: { turbolinks: false }, class: (started_reading && unread_replies.zero?) ? "topic-read" : "topic-unread"
            - else
              = link_to topic.title, topic, class: (started_reading && unread_replies.zero?) ? "topic-read" : "topic-unread"
            .small
              %small= link_to topic.user.username, member_path(topic.user.username), class: "link-blend-semi-muted"
          %td.d-none.d-sm-table-cell.text-muted.text-center
            %span.small= number_with_delimiter [topic.replies_count - 1, 0].max
          %td.d-none.d-md-table-cell.text-muted.text-center
            %span.small= number_to_human topic.view_count, precision: 2
          %td.d-none.d-md-table-cell.text-muted.text-center
            %span.small= abbreviated_time(topic.last_reply_at)

.center-horizontally= paginate @topics, theme: "bootstrap-small"
